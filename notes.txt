Development notes for pvQt

20 Sept 08	Adapting the freepv QTVR reader

Goal:
  use Pablo's QTVRDecoder, with QImage replacing his Image

Files copied from freepv/src:
	Image.h
	JpegReader.h, .cpp
	Parameters.h, .cpp
	QTVRDecoder.h, .cpp

Initial strategy:
  make Image class a wrapper around QImage,
  modify Parameters to fit into Qt framework,
  use QTVRDecoder unchanged.
  replace freepv jpeg decoder with Qt's (use QBuffer as "device")

	
	
1 October 2008  a bug un ubuntu hardy heron?
	When main window is maximized, the UI goes dead.
	This is not the case on Win32 (minGW).
	
2 Oct 2008	Adapting QTVRDecoder 
	It first parses and indexes the QTVR file then extracts 
	all found pano images by rereading sections as jpeg.
	It uses stdio so will only work on a local file.  Should 
	have the ability to work from memory too.
	It would be good to be able to load the cube faces
	separately.
	Repackaging as a QImageIOPlugin would provide a lot of
	nice behavior.  The downside is that it would be a lot of 
	work and the plugin dll has to be installed in a special 
	directory name.  A probably much easier alternative	is to 
	make a readQTVR class that just gets the jpeg files in core, 
	and use a QImageReader on those.  I think this could be done
	without making	the QTVR reader depend on Qt.
  [no it can't, much better to revise QTVRDecoder to use QImage
  and a few other Qt types.  This I have done.]
	But first I'll try to use QTVRDecoder pretty much as-is,
	with a Qt-based Image class, defs from parameters.h or 
	utils.h replaced with local defs. 
 3 Oct:  pvQt_QTVR.{h,cpp} have a Qt-based QTVRDecoder that
    returns QImages, one at a time.  It still uses stdio and
    a C-string file name.  I revised the tile copy logic to
    also do the 90 degree rotation of cylindrical panos -- it
    now uses a single generalized add tile to image routine
    for all cases.

11 Oct 2008
	30 downloads from SF in 1st 2 days! And a lot of good feedback, 
	from hugin builders and others.
	
	Harry v.d. Wolf has contributed a small patch that lets pvQt
	build on OSX -- committed tonite.  He also noticed that he got
	a very big patch after his change.  That's because I put the
	ui_xxx headers in svn, but they don't belong there because
	they are regenerated auotmatically.  So I have pulled those.
	Also put copyright/GPL notice in all source files.

13 Oct 2008
	Revised pvQt-build.txt to clarify the procedure for becoming a 
	registered developer, and add some coding standards I'd like such
	developers to follow.  One of those is to allow only Unicode file 
	names into pvQt, so now I must  -- 
done	change the way pvQt reads its command line to conform.

    Other TODOs:

done	Add MSVS-project to the source tree.

done	Reverse pitch key direction in cubic.

done	Make PageUp/Down do zoom, and Ctl-Pgup/dn do perspective.

	Put picture type, viewed size and filename in main window title.

done	Put a helpful title on image file selector window.
	
test	Probe OGL capabilities in pvQtView, and tell user about limitations.
	In particular check OGL rev, vram and pwr-of-2 textures at startup;
	use texture proxies to fit each picture to the available resources.

done	Add angular size (fov) to the picture type dialog.

done	Get FOV from user if not determined by picture type.

part	Show pictures with restricted fovs.

cube	Make sure missing or unreadable image files give empty frames.

done	Show rectilinear pictures (up to 90 deg)

	Show cylindrical pictures.

	Show hemispherical pictures (incl. fisheye).

	Construct a debuggable QTVR parser, that takes only stream args (input
	and log).  Support caching jpegs from the stream.  This will be a major
	rewrite of the stdio-based parser.
	
	Design ways to build lens correction (adjustable radial projection fns) 
	into the various display modes.

17 Oct 2008

	Now have a feasible scheme for adjusting frame FOVs and size: given
	image dims and fovs, set required frame fovs, then set frame dims by 
	scaling image dims via fov ratios.
	
	BUT image FOVs must be set correctly: only one FOV is free, the other
	is then fixed by the dimensions.  The type/fov dialog must show dims,
	and automatically set 2nd fov when one is entered (and both when type
	changes -- use HFOV as primary).  Probably shd just take HFOV.

	If the image fovs agree with dims, then the same should be true for
	the frame.  But we may have to polish a little.

19 Oct 2008

	Can only set one FOV in the pictype dialog (the longer one) -- must
	set the other in Pic according to dimensions etc.
	Have modified the dialog, now must fix Pic

	There can be no hemi pictype; but fish == mirrorball, r/f = sin(a/2),
	can go to 360 deg diameter; this is the OGL "sphere map".
	Must remove hemi.  Then only cube can have >1 file.
	Must implement sphere map display.  Then can show all but cyli and
	big recti.

	
23 Oct 2008

  PROGRESS!
	face FOV adjustment and picture packing are working in all cases 
	no source file gives empty image (at max FOV) ditto
	all pic types but cyli and fish are displayed (no more 'hemi' type).
	title bar and about box are showing useful info including SVN rev

	Will now make release 0.2:	
	  Source tarball
	  Binary Win32 self installer
	  
	Then implement fish/sphere (shd be a piece of cake :->)

24 Oct 2008
	Or maybe fish then release.
	
	Fixed some problems on linux (illegible font in about box)
	also a bug that made adaptive image reduction fail.
	Still have erratic behavior on cancel file load: often the
	correct empty frame; sometimes black screen; sometimes the
	old image stays up with "ERROR: no error" in window title.
	
	QDevelop stopped working after I installed a security update 
	allegedly related to printing.  Now it segfaults at start.
	So it's back to Vista.  Guess I should get Eclipse...
	
	
	 